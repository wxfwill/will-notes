(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{432:function(t,a,r){"use strict";r.r(a);var e=r(54),c=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"react-事件系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react-事件系统"}},[t._v("#")]),t._v(" react 事件系统")]),t._v(" "),r("p",[r("strong",[t._v("react 中，我们所看到的事件都是假的，并不是真正的事件处理函数")])]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),r("p",[t._v("1.给元素绑定的事件，不是真正的事件处理函数。"),r("br"),t._v(" 2.在冒泡/捕获阶段绑定的事件，也不是在冒泡/捕获阶段执行的。"),r("br"),t._v(" 3.甚至在事件处理函数中拿到的事件源 e,也不是真正的事件源 e."),r("br")])]),t._v(" "),r("h2",{attrs:{id:"react-为什么有自己的事件系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react-为什么有自己的事件系统"}},[t._v("#")]),t._v(" react 为什么有自己的事件系统")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("首先，对于不同的浏览器，对事件存在不同的兼容性，react 想实现一个兼容全浏览器的框架，为了实现这个目标就需要创建一个兼容全浏览器的额事件系统，以此来抹平不同浏览器的差异")])]),t._v(" "),r("li",[r("p",[t._v("其次，v17 之前 react 事件都是绑定在 document 上，v17 之后 react 把事件绑定在应用对应的容器 container 上，将事件绑定在同一容器统一管理，防止很多事件直接绑定在原生的 DOM 元素上，造成一些不可控的情况，由于不是绑定在真实的 dom 上，所以 react 需要模拟一套事件流：事件捕获->事件源->事件冒泡，也包括重写事件源对象 event.")])]),t._v(" "),r("li",[r("p",[t._v("这种事件系统，大部分处理逻辑都在底层处理了，对后期的 ssr 和跨端支持度很高")])])]),t._v(" "),r("h2",{attrs:{id:"什么是事件合成"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是事件合成"}},[t._v("#")]),t._v(" 什么是事件合成")]),t._v(" "),r("p",[r("strong",[t._v("react 事件系统分成三个部分")])]),t._v(" "),r("blockquote",[r("p",[t._v("第一个部分是事件合成系统，初始化会注册不同的事件插件。"),r("br"),t._v("\n第二个就是在一次渲染过程中，对事件标签中事件的收集，向 container 注册事件。"),r("br"),t._v("\n第三个就是在一次用户交互，事件触发，到事件执行一系列过程。"),r("br")])]),t._v(" "),r("p",[r("strong",[t._v("事件绑定并不是一次性绑定所有的事件")])]),t._v(" "),r("ul",[r("li",[t._v("事件合成概念：react 应用中，元素绑定的事件并不是原生事件，而是 react 合成的事件，比如 onclick 是有 click 合成的，onchange 是有 blur,change,foucs 等多个事件合成。")])]),t._v(" "),r("ul",[r("li",[t._v("事件合成的作用：一统一管理事件，二是跨浏览器，跨平台的支持度好，不同平台和浏览器可能对上述事件存在兼容性等问题。")])]),t._v(" "),r("h2",{attrs:{id:"为什么要用不同的事件插件处理不同的-react-事件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么要用不同的事件插件处理不同的-react-事件"}},[t._v("#")]),t._v(" 为什么要用不同的事件插件处理不同的 react 事件")]),t._v(" "),r("ul",[r("li",[t._v("首先对不同的事件，有不同的处理逻辑，对应的事件源对象也有所不同，react 的事件和事件源都是自己合成的，所以对于不同事件需要不同的事件插件处理。")])])])}),[],!1,null,null,null);a.default=c.exports}}]);